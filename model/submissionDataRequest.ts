/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";

export class SubmissionDataRequest {
  "id": string;
  "submissionId"?: string;
  "name": string | null;
  "email": string | null;
  "order": number;
  "sortOrder": number;
  "fields": Array<string> | null;
  "metadata": object;
  "state": SubmissionDataRequest.StateEnum;
  "viewedAt"?: string | null;
  "completedAt"?: string | null;
  "authType"?: SubmissionDataRequest.AuthTypeEnum;
  "authSecondFactorType"?: SubmissionDataRequest.AuthSecondFactorTypeEnum;
  "authProvider"?: string | null;
  "authSessionStartedAt"?: string | null;
  "authSessionIdHash"?: string | null;
  "authUserIdHash"?: string | null;
  "authUsernameHash"?: string | null;
  "authPhoneNumberHash"?: string | null;
  "ipAddress"?: string | null;
  "userAgent"?: string | null;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "submissionId",
      baseName: "submission_id",
      type: "string",
    },
    {
      name: "name",
      baseName: "name",
      type: "string",
    },
    {
      name: "email",
      baseName: "email",
      type: "string",
    },
    {
      name: "order",
      baseName: "order",
      type: "number",
    },
    {
      name: "sortOrder",
      baseName: "sort_order",
      type: "number",
    },
    {
      name: "fields",
      baseName: "fields",
      type: "Array<string>",
    },
    {
      name: "metadata",
      baseName: "metadata",
      type: "object",
    },
    {
      name: "state",
      baseName: "state",
      type: "SubmissionDataRequest.StateEnum",
    },
    {
      name: "viewedAt",
      baseName: "viewed_at",
      type: "string",
    },
    {
      name: "completedAt",
      baseName: "completed_at",
      type: "string",
    },
    {
      name: "authType",
      baseName: "auth_type",
      type: "SubmissionDataRequest.AuthTypeEnum",
    },
    {
      name: "authSecondFactorType",
      baseName: "auth_second_factor_type",
      type: "SubmissionDataRequest.AuthSecondFactorTypeEnum",
    },
    {
      name: "authProvider",
      baseName: "auth_provider",
      type: "string",
    },
    {
      name: "authSessionStartedAt",
      baseName: "auth_session_started_at",
      type: "string",
    },
    {
      name: "authSessionIdHash",
      baseName: "auth_session_id_hash",
      type: "string",
    },
    {
      name: "authUserIdHash",
      baseName: "auth_user_id_hash",
      type: "string",
    },
    {
      name: "authUsernameHash",
      baseName: "auth_username_hash",
      type: "string",
    },
    {
      name: "authPhoneNumberHash",
      baseName: "auth_phone_number_hash",
      type: "string",
    },
    {
      name: "ipAddress",
      baseName: "ip_address",
      type: "string",
    },
    {
      name: "userAgent",
      baseName: "user_agent",
      type: "string",
    },
  ];

  static getAttributeTypeMap() {
    return SubmissionDataRequest.attributeTypeMap;
  }
}

export namespace SubmissionDataRequest {
  export enum StateEnum {
    Pending = "pending",
    Completed = "completed",
  }
  export enum AuthTypeEnum {
    None = "none",
    Password = "password",
    Oauth = "oauth",
    EmailLink = "email_link",
    PhoneNumber = "phone_number",
    Ldap = "ldap",
    Saml = "saml",
  }
  export enum AuthSecondFactorTypeEnum {
    None = "none",
    PhoneNumber = "phone_number",
    Totp = "totp",
    MobilePush = "mobile_push",
    SecurityKey = "security_key",
    Fingerprint = "fingerprint",
  }
}
